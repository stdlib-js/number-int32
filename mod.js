// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var e="function"==typeof Object.defineProperty?Object.defineProperty:null;var r=function(){try{return e({},"x",{}),!0}catch(e){return!1}},t=Object.defineProperty,n=Object.prototype,o=n.toString,a=n.__defineGetter__,i=n.__defineSetter__,l=n.__lookupGetter__,u=n.__lookupSetter__;var c=t,_=function(e,r,t){var c,_,p,f;if("object"!=typeof e||null===e||"[object Array]"===o.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof t||null===t||"[object Array]"===o.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((_="value"in t)&&(l.call(e,r)||u.call(e,r)?(c=e.__proto__,e.__proto__=n,delete e[r],e[r]=t.value,e.__proto__=c):e[r]=t.value),p="get"in t,f="set"in t,_&&(p||f))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return p&&a&&a.call(e,r,t.get),f&&i&&i.call(e,r,t.set),e},p=r()?c:_;var f,b,v,s,y=function(e,r,t){p(e,r,{configurable:!1,enumerable:!0,writable:!1,value:t})};var d={};y(d,"int32ToUint32",function(){if(s)return v;s=1;var e=b?f:(b=1,f=function(e){return e>>>0});return v=e}());var j=d,g={};y(g,"base",j);export{j as base,g as default};
//# sourceMappingURL=mod.js.map
