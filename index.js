// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
var e,t;e=this,t=function(){"use strict";var e,t,r,n,o="function"==typeof Object.defineProperty?Object.defineProperty:null,i=function(){try{return o({},"x",{}),!0}catch(e){return!1}},a=Object.defineProperty,l=Object.prototype,u=l.toString,c=l.__defineGetter__,f=l.__defineSetter__,_=l.__lookupGetter__,p=l.__lookupSetter__,d=a,b=function(e,t,r){var n,o,i,a;if("object"!=typeof e||null===e||"[object Array]"===u.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof r||null===r||"[object Array]"===u.call(r))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+r+"`.");if((o="value"in r)&&(_.call(e,t)||p.call(e,t)?(n=e.__proto__,e.__proto__=l,delete e[t],e[t]=r.value,e.__proto__=n):e[t]=r.value),i="get"in r,a="set"in r,o&&(i||a))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return i&&c&&c.call(e,t,r.get),a&&f&&f.call(e,t,r.set),e},s=i()?d:b,y=function(e,t,r){s(e,t,{configurable:!1,enumerable:!0,writable:!1,value:r})},v={};y(v,"int32ToUint32",function(){if(n)return r;n=1;var o=t?e:(t=1,e=function(e){return e>>>0});return r=o}());var j={};return y(j,"base",v),j},"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).ns=t();
//# sourceMappingURL=index.js.map
